env: "pressureplate"

env_args:
  key: null # 3 options from gym implemented envs: "pressureplate-linear-4p-v0", "pressureplate-linear-5p-v0", "pressureplate-linear-6p-v0"
  max_cycles: null ## CUSTOM: find the max timestep var, where an agent can be active
  layout: "linear" # For now, linear only option
  horizon: null
  kwargs: "" # Use in terminal: env_args.kwargs="('arg1',arg1_value), ('arg2',arg2_value)"
             # has default valuese, if key is not null and gym wrapper called (see register() calls)

test_greedy: True
test_nepisode: 10 # 100
test_interval: 500 # 50000
log_interval: 500 # 50000
runner_log_interval: 1000 # 10000
learner_log_interval: 1000 # 10000
t_max: 10000 # 2050000

# PressurePlate
# https://github.com/uoe-agents/pressureplate/tree/main
# args: layout="linear", horizon=500, n_agents=4
# RUN: python3 src/main.py --config=qmix --env-config=pressureplate with env_args.time_limit=500 env_args.key="pressureplate-linear-6p-v0"


# _sizes = {
#     "tiny": (5, 5),
#     "small": (8, 8),
#     "medium": (15, 9),
#     "large": (20, 20),
# }
#
#
#
#
# for size in _sizes.keys():
#     # for n_agents in range(2, 5):
#
#     register(
#         id=f"pressureplate-{size}-v0",
#         entry_point="pressureplate.environment:PressurePlate",
#         kwargs={
#             "height": _sizes[size][0],
#             "width": _sizes[size][1],
#             "n_agents": 4,
#             "sensor_range": 4,
#         },
#     )